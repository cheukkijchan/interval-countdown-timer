{"version":3,"sources":["components/Footer.tsx","App.tsx","utils/beep.ts","index.tsx"],"names":["Footer","className","href","App","useState","cycle","setCycle","timeInterval","setTimeInterval","startTimeRef","useRef","timeRef","cycleRef","timeMinutes","setTimesMinutes","timeSeconds","setTimesSeconds","timerOn","setTimerOn","useEffect","current","Math","floor","interval","setInterval","prev","Audio","Array","join","play","clearInterval","onPauseHandler","onResetHandler","cycleChangeHandler","increment","intervalChangeHandler","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8117bdcf.chunk.js","sourcesContent":["function Footer() {\r\n  return (\r\n    <div className='footer'>\r\n      <a href='https://github.com/cheukkijchan'>Github</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import './App.css';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { beep } from './utils/beep';\r\nimport Footer from './components/Footer';\r\n\r\nfunction App() {\r\n  // ---- User Input ----\r\n  // get cycle\r\n  const [cycle, setCycle] = useState<number>(10);\r\n  // get interval(in minutes), default to 15 mins\r\n  const [timeInterval, setTimeInterval] = useState<number>(15);\r\n\r\n  // local variable used in function\r\n  // Unit: second\r\n  const startTimeRef = useRef(15 * 60);\r\n  const timeRef = useRef(15 * 60);\r\n  const cycleRef = useRef(10);\r\n\r\n  const [timeMinutes, setTimesMinutes] = useState<number>(0);\r\n  const [timeSeconds, setTimesSeconds] = useState<number>(0);\r\n  const [timerOn, setTimerOn] = useState<boolean>(false);\r\n\r\n  // componentDidMount\r\n  useEffect(() => {\r\n    timeRef.current = timeInterval * 60;\r\n    startTimeRef.current = timeInterval * 60;\r\n    setTimesMinutes(Math.floor(startTimeRef.current / 60));\r\n    setTimesSeconds(Math.floor(startTimeRef.current % 60));\r\n  }, [timeInterval]);\r\n\r\n  // when Timer set to On/Resume\r\n  useEffect(() => {\r\n    let interval: any = null;\r\n    if (timerOn) {\r\n      interval = setInterval(() => {\r\n        if (timeRef.current > 0) {\r\n          timeRef.current = timeRef.current - 1;\r\n          setTimesMinutes(Math.floor(timeRef.current / 60));\r\n          setTimesSeconds(Math.floor(timeRef.current % 60));\r\n        } else {\r\n          setCycle((prev) => (prev > 0 ? prev - 1 : prev));\r\n          beep();\r\n        }\r\n      }, 1000);\r\n    } else if (!timerOn) {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [timerOn]);\r\n\r\n  useEffect(() => {\r\n    if (cycle > 0) {\r\n      setTimesMinutes(Math.floor(startTimeRef.current / 60));\r\n      setTimesSeconds(Math.floor(startTimeRef.current % 60));\r\n      timeRef.current = startTimeRef.current;\r\n    } else {\r\n      onPauseHandler();\r\n      onResetHandler();\r\n    }\r\n  }, [cycle]);\r\n\r\n  // Function Handler\r\n  const onStartHandler = () => setTimerOn(true);\r\n\r\n  const onPauseHandler = () => setTimerOn(false);\r\n\r\n  const onResetHandler = () => {\r\n    // pause timer\r\n    onPauseHandler();\r\n    // reset to default\r\n    timeRef.current = startTimeRef.current;\r\n    setTimesMinutes(Math.floor(startTimeRef.current / 60));\r\n    setTimesSeconds(Math.floor(startTimeRef.current % 60));\r\n    setCycle(cycleRef.current);\r\n  };\r\n\r\n  const cycleChangeHandler = (increment: number) => {\r\n    if (cycle > 0) {\r\n      setCycle(cycle + increment);\r\n      cycleRef.current = cycleRef.current + increment;\r\n    } else {\r\n      if (increment > 0) {\r\n        setCycle(cycle + increment);\r\n        cycleRef.current = cycleRef.current + increment;\r\n      }\r\n    }\r\n  };\r\n\r\n  const intervalChangeHandler = (increment: number) => {\r\n    if (timeInterval > 1) {\r\n      setTimeInterval(timeInterval + increment);\r\n      startTimeRef.current = startTimeRef.current + increment * 60;\r\n    } else {\r\n      if (increment > 0) {\r\n        setTimeInterval(timeInterval + increment);\r\n        startTimeRef.current = startTimeRef.current + increment * 60;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1 className='header'>Do Your Work</h1>\r\n      <div className='cycle'>\r\n        <h3>Cycle Left: {cycle}</h3>\r\n        {!timerOn && (\r\n          <div className='button-container'>\r\n            <button className='button' onClick={() => cycleChangeHandler(1)}>\r\n              +\r\n            </button>\r\n            <button className='button' onClick={() => cycleChangeHandler(-1)}>\r\n              -\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className='timer'>\r\n        <h1>\r\n          {timeMinutes > 9 ? timeMinutes : `0${timeMinutes}`}:\r\n          {timeSeconds > 9 ? timeSeconds : `0${timeSeconds}`}\r\n        </h1>\r\n        {!timerOn && (\r\n          <div className='button-container'>\r\n            <button className='button' onClick={() => intervalChangeHandler(1)}>\r\n              +\r\n            </button>\r\n            <button\r\n              className='button'\r\n              onClick={() => intervalChangeHandler(-1)}\r\n            >\r\n              -\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className='control-button'>\r\n        {!timerOn ? (\r\n          <button onClick={onStartHandler}>Start</button>\r\n        ) : (\r\n          <button onClick={onPauseHandler}>Pause</button>\r\n        )}\r\n        <button onClick={onResetHandler}>Reset</button>\r\n      </div>\r\n      <br />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const beep = () => {\r\n  new Audio(\r\n    'data:audio/wav;base64,UklGRl9vT19XQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YU' +\r\n      Array(1e3).join('123')\r\n  ).play();\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}